package com.edu.education.contract;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.fisco.bcos.channel.client.TransactionSucCallback;
import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;
import org.fisco.bcos.web3j.abi.TypeReference;
import org.fisco.bcos.web3j.abi.datatypes.DynamicArray;
import org.fisco.bcos.web3j.abi.datatypes.Function;
import org.fisco.bcos.web3j.abi.datatypes.Type;
import org.fisco.bcos.web3j.abi.datatypes.Utf8String;
import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;
import org.fisco.bcos.web3j.crypto.Credentials;
import org.fisco.bcos.web3j.crypto.EncryptType;
import org.fisco.bcos.web3j.protocol.Web3j;
import org.fisco.bcos.web3j.protocol.core.RemoteCall;
import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.fisco.bcos.web3j.tuples.generated.Tuple1;
import org.fisco.bcos.web3j.tx.Contract;
import org.fisco.bcos.web3j.tx.TransactionManager;
import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;
import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version none.
 */
@SuppressWarnings("unchecked")
public class HomeworkGradeContract extends Contract {
    public static final String[] BINARY_ARRAY = {"","","60006119c48251612413565b905092915050565b60006119d88251612425565b905092915050565b60006119ec8251612437565b905092915050565b6000611a008251612449565b905092915050565b6000611a14825161245b565b905092915050565b600082601f8301121515611a2f57600080fd5b8135611a42611a3d82612344565b6122ef565b91508082526020830160208301858383011115611a5e57600080fd5b611a6983828461249b565b50505092915050565b600082601f8301121515611a8557600080fd5b8135611a98611a9382612370565b6122ef565b91508082526020830160208301858383011115611ab457600080fd5b611abf83828461249b565b50505092915050565b600082601f8301121515611adb57600080fd5b8151611aee611ae982612370565b6122ef565b91508082526020830160208301858383011115611b0a57600080fd5b611b158382846124aa565b50505092915050565b600060208284031215611b3057600080fd5b600082013567ffffffffffffffff811115611b4a57600080fd5b611b5684828501611942565b91505092915050565b600060208284031215611b7157600080fd5b6000611b7f848285016119b8565b91505092915050565b600060208284031215611b9a57600080fd5b6000611ba8848285016119cc565b91505092915050565b600060208284031215611bc357600080fd5b6000611bd1848285016119e0565b91505092915050565b600060208284031215611bec57600080fd5b6000611bfa848285016119f4565b91505092915050565b600060208284031215611c1557600080fd5b6000611c2384828501611a08565b91505092915050565b600060208284031215611c3e57600080fd5b600082015167ffffffffffffffff811115611c5857600080fd5b611c6484828501611ac8565b91505092915050565b60008060408385031215611c8057600080fd5b600083013567ffffffffffffffff811115611c9a57600080fd5b611ca685828601611a72565b925050602083013567ffffffffffffffff811115611cc357600080fd5b611ccf85828601611a72565b9150509250929050565b600080600060608486031215611cee57600080fd5b600084013567ffffffffffffffff811115611d0857600080fd5b611d1486828701611a72565b935050602084013567ffffffffffffffff811115611d3157600080fd5b611d3d86828701611a72565b925050604084013567ffffffffffffffff811115611d5a57600080fd5b611d6686828701611a72565b9150509250925092565b6000611d7b826123bb565b80845260208401935083602082028501611d948561239c565b60005b84811015611dcd578383038852611daf838351611e50565b9250611dba826123dc565b9150602088019750600181019050611d97565b508196508694505050505092915050565b611de781612465565b82525050565b611df681612477565b82525050565b611e0581612409565b82525050565b611e1481612489565b82525050565b6000611e25826123d1565b808452611e398160208601602086016124aa565b611e42816124dd565b602085010191505092915050565b6000611e5b826123c6565b808452611e6f8160208601602086016124aa565b611e78816124dd565b602085010191505092915050565b600081546001811660008114611ea35760018114611ec357611f04565b607f600283041680865260ff198316602087015260408601935050611f04565b60028204808652602086019550611ed9856123a9565b60005b82811015611efb57815481890152600182019150602081019050611edc565b80880195505050505b505092915050565b6000600382527f6b657900000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600782527f636c6173736964000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600982527f73747564656e74696400000000000000000000000000000000000000000000006020830152604082019050919050565b6000600e82527f686f6d65776f726b6e756d6265720000000000000000000000000000000000006020830152604082019050919050565b6000601e82527f417574683a206f6e6c79206f776e657220697320617574686f72697a656400006020830152604082019050919050565b6000604182527f73747564656e7469642c636f6e74656e742c636c61737369642c636c6173736e60208301527f616d652c686f6d65776f726b6e756d6265722c6d61726b74696d652c6772616460408301527f65000000000000000000000000000000000000000000000000000000000000006060830152608082019050919050565b600060208201905081810360008301526120bc8184611d70565b905092915050565b60006020820190506120d96000830184611dfc565b92915050565b60006020820190506120f46000830184611e0b565b92915050565b600060208201905081810360008301526121148184611e86565b905092915050565b600060408201905081810360008301526121368185611e86565b90506121456020830184611dde565b9392505050565b600060408201905081810360008301526121668185611e86565b90506121756020830184611ded565b9392505050565b600060408201905081810360008301526121968185611e86565b905081810360208301526121aa8184611e50565b90509392505050565b600060608201905081810360008301526121cd8184611e86565b905081810360208301526121e081611f0c565b905081810360408301526121f38161201f565b905092915050565b6000604082019050818103600083015261221481611f0c565b905081810360208301526122288184611e86565b905092915050565b6000604082019050818103600083015261224981611f43565b9050818103602083015261225d8184611e1a565b905092915050565b6000604082019050818103600083015261227e81611f7a565b905081810360208301526122928184611e1a565b905092915050565b600060408201905081810360008301526122b381611fb1565b905081810360208301526122c78184611e1a565b905092915050565b600060208201905081810360008301526122e881611fe8565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171561231257600080fd5b8060405250919050565b600067ffffffffffffffff82111561233357600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561235b57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561238757600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b60008160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061241e826123e9565b9050919050565b6000612430826123e9565b9050919050565b6000612442826123e9565b9050919050565b6000612454826123e9565b9050919050565b6000819050919050565b6000612470826123e9565b9050919050565b6000612482826123e9565b9050919050565b600061249482612409565b9050919050565b82818337600083830152505050565b60005b838110156124c85780820151818401526020810190506124ad565b838111156124d7576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a723058205c7f632f5468123ffc9148862304750609e61e7f8ca4e9527f3c0e9e009a914d6c6578706572696d656e74616cf50037"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":false,\"inputs\":[{\"name\":\"info\",\"type\":\"string[]\"}],\"name\":\"insert\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"studentid\",\"type\":\"string\"},{\"name\":\"classid\",\"type\":\"string\"},{\"name\":\"homeworknumber\",\"type\":\"string\"}],\"name\":\"selectByStudentidAndClassidAndNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"studentid\",\"type\":\"string\"},{\"name\":\"classid\",\"type\":\"string\"},{\"name\":\"homeworknumber\",\"type\":\"string\"}],\"name\":\"checkRecordExist\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"studentid\",\"type\":\"string\"},{\"name\":\"classid\",\"type\":\"string\"}],\"name\":\"selectByStudentidAndClassid\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createTable\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);

    public static final String[] SM_BINARY_ARRAY = {"","","60006119c48251612413565b905092915050565b60006119d88251612425565b905092915050565b60006119ec8251612437565b905092915050565b6000611a008251612449565b905092915050565b6000611a14825161245b565b905092915050565b600082601f8301121515611a2f57600080fd5b8135611a42611a3d82612344565b6122ef565b91508082526020830160208301858383011115611a5e57600080fd5b611a6983828461249b565b50505092915050565b600082601f8301121515611a8557600080fd5b8135611a98611a9382612370565b6122ef565b91508082526020830160208301858383011115611ab457600080fd5b611abf83828461249b565b50505092915050565b600082601f8301121515611adb57600080fd5b8151611aee611ae982612370565b6122ef565b91508082526020830160208301858383011115611b0a57600080fd5b611b158382846124aa565b50505092915050565b600060208284031215611b3057600080fd5b600082013567ffffffffffffffff811115611b4a57600080fd5b611b5684828501611942565b91505092915050565b600060208284031215611b7157600080fd5b6000611b7f848285016119b8565b91505092915050565b600060208284031215611b9a57600080fd5b6000611ba8848285016119cc565b91505092915050565b600060208284031215611bc357600080fd5b6000611bd1848285016119e0565b91505092915050565b600060208284031215611bec57600080fd5b6000611bfa848285016119f4565b91505092915050565b600060208284031215611c1557600080fd5b6000611c2384828501611a08565b91505092915050565b600060208284031215611c3e57600080fd5b600082015167ffffffffffffffff811115611c5857600080fd5b611c6484828501611ac8565b91505092915050565b60008060408385031215611c8057600080fd5b600083013567ffffffffffffffff811115611c9a57600080fd5b611ca685828601611a72565b925050602083013567ffffffffffffffff811115611cc357600080fd5b611ccf85828601611a72565b9150509250929050565b600080600060608486031215611cee57600080fd5b600084013567ffffffffffffffff811115611d0857600080fd5b611d1486828701611a72565b935050602084013567ffffffffffffffff811115611d3157600080fd5b611d3d86828701611a72565b925050604084013567ffffffffffffffff811115611d5a57600080fd5b611d6686828701611a72565b9150509250925092565b6000611d7b826123bb565b80845260208401935083602082028501611d948561239c565b60005b84811015611dcd578383038852611daf838351611e50565b9250611dba826123dc565b9150602088019750600181019050611d97565b508196508694505050505092915050565b611de781612465565b82525050565b611df681612477565b82525050565b611e0581612409565b82525050565b611e1481612489565b82525050565b6000611e25826123d1565b808452611e398160208601602086016124aa565b611e42816124dd565b602085010191505092915050565b6000611e5b826123c6565b808452611e6f8160208601602086016124aa565b611e78816124dd565b602085010191505092915050565b600081546001811660008114611ea35760018114611ec357611f04565b607f600283041680865260ff198316602087015260408601935050611f04565b60028204808652602086019550611ed9856123a9565b60005b82811015611efb57815481890152600182019150602081019050611edc565b80880195505050505b505092915050565b6000600e82527f686f6d65776f726b6e756d6265720000000000000000000000000000000000006020830152604082019050919050565b6000600382527f6b657900000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000604182527f73747564656e7469642c636f6e74656e742c636c61737369642c636c6173736e60208301527f616d652c686f6d65776f726b6e756d6265722c6d61726b74696d652c6772616460408301527f65000000000000000000000000000000000000000000000000000000000000006060830152608082019050919050565b6000601e82527f417574683a206f6e6c79206f776e657220697320617574686f72697a656400006020830152604082019050919050565b6000600782527f636c6173736964000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600982527f73747564656e74696400000000000000000000000000000000000000000000006020830152604082019050919050565b600060208201905081810360008301526120bc8184611d70565b905092915050565b60006020820190506120d96000830184611dfc565b92915050565b60006020820190506120f46000830184611e0b565b92915050565b600060208201905081810360008301526121148184611e86565b905092915050565b600060408201905081810360008301526121368185611e86565b90506121456020830184611dde565b9392505050565b600060408201905081810360008301526121668185611e86565b90506121756020830184611ded565b9392505050565b600060408201905081810360008301526121968185611e86565b905081810360208301526121aa8184611e50565b90509392505050565b600060608201905081810360008301526121cd8184611e86565b905081810360208301526121e081611f43565b905081810360408301526121f381611f7a565b905092915050565b6000604082019050818103600083015261221481611f0c565b905081810360208301526122288184611e1a565b905092915050565b6000604082019050818103600083015261224981611f43565b9050818103602083015261225d8184611e86565b905092915050565b6000602082019050818103600083015261227e81611ffd565b9050919050565b6000604082019050818103600083015261229e81612034565b905081810360208301526122b28184611e1a565b905092915050565b600060408201905081810360008301526122d38161206b565b905081810360208301526122e78184611e1a565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561231257600080fd5b8060405250919050565b600067ffffffffffffffff82111561233357600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561235b57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561238757600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b60008160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061241e826123e9565b9050919050565b6000612430826123e9565b9050919050565b6000612442826123e9565b9050919050565b6000612454826123e9565b9050919050565b6000819050919050565b6000612470826123e9565b9050919050565b6000612482826123e9565b9050919050565b600061249482612409565b9050919050565b82818337600083830152505050565b60005b838110156124c85780820151818401526020810190506124ad565b838111156124d7576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a723058204ffc818127bf1330122c26452112e2f2c3b40f873d1eb4b58964d9414421a5516c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String FUNC_INSERT = "insert";

    public static final String FUNC_SELECTBYSTUDENTIDANDCLASSIDANDNUMBER = "selectByStudentidAndClassidAndNumber";

    public static final String FUNC_CHECKRECORDEXIST = "checkRecordExist";

    public static final String FUNC_SELECTBYSTUDENTIDANDCLASSID = "selectByStudentidAndClassid";

    public static final String FUNC_CREATETABLE = "createTable";

    @Deprecated
    protected HomeworkGradeContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected HomeworkGradeContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected HomeworkGradeContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected HomeworkGradeContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static String getBinary() {
        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public static TransactionDecoder getTransactionDecoder() {
        return transactionDecoder;
    }

    public RemoteCall<TransactionReceipt> insert(List<String> info) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(info.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(info, Utf8String.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void insert(List<String> info, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(info.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(info, Utf8String.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String insertSeq(List<String> info) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(info.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(info, Utf8String.class))),
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public Tuple1<List<String>> getInsertInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;
        return new Tuple1<List<String>>(

                convertToNative((List<Utf8String>) results.get(0).getValue())
                );
    }

    public Tuple1<BigInteger> getInsertOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public RemoteCall<List> selectByStudentidAndClassidAndNumber(String studentid, String classid, String homeworknumber) {
        final Function function = new Function(FUNC_SELECTBYSTUDENTIDANDCLASSIDANDNUMBER, 
                Arrays.<Type>asList(new Utf8String(studentid),
                new Utf8String(classid),
                new Utf8String(homeworknumber)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<BigInteger> checkRecordExist(String studentid, String classid, String homeworknumber) {
        final Function function = new Function(FUNC_CHECKRECORDEXIST, 
                Arrays.<Type>asList(new Utf8String(studentid),
                new Utf8String(classid),
                new Utf8String(homeworknumber)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<List> selectByStudentidAndClassid(String studentid, String classid) {
        final Function function = new Function(FUNC_SELECTBYSTUDENTIDANDCLASSID, 
                Arrays.<Type>asList(new Utf8String(studentid),
                new Utf8String(classid)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<TransactionReceipt> createTable() {
        final Function function = new Function(
                FUNC_CREATETABLE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void createTable(TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_CREATETABLE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String createTableSeq() {
        final Function function = new Function(
                FUNC_CREATETABLE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public Tuple1<BigInteger> getCreateTableOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CREATETABLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    @Deprecated
    public static HomeworkGradeContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new HomeworkGradeContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static HomeworkGradeContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new HomeworkGradeContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static HomeworkGradeContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new HomeworkGradeContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static HomeworkGradeContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new HomeworkGradeContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<HomeworkGradeContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(HomeworkGradeContract.class, web3j, credentials, contractGasProvider, getBinary(), "");
    }

    public static RemoteCall<HomeworkGradeContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(HomeworkGradeContract.class, web3j, transactionManager, contractGasProvider, getBinary(), "");
    }

    @Deprecated
    public static RemoteCall<HomeworkGradeContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(HomeworkGradeContract.class, web3j, credentials, gasPrice, gasLimit, getBinary(), "");
    }

    @Deprecated
    public static RemoteCall<HomeworkGradeContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(HomeworkGradeContract.class, web3j, transactionManager, gasPrice, gasLimit, getBinary(), "");
    }
}
