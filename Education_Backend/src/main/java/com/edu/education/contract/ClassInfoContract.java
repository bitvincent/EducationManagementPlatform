package com.edu.education.contract;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.fisco.bcos.channel.client.TransactionSucCallback;
import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;
import org.fisco.bcos.web3j.abi.TypeReference;
import org.fisco.bcos.web3j.abi.datatypes.DynamicArray;
import org.fisco.bcos.web3j.abi.datatypes.Function;
import org.fisco.bcos.web3j.abi.datatypes.Type;
import org.fisco.bcos.web3j.abi.datatypes.Utf8String;
import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;
import org.fisco.bcos.web3j.crypto.Credentials;
import org.fisco.bcos.web3j.crypto.EncryptType;
import org.fisco.bcos.web3j.protocol.Web3j;
import org.fisco.bcos.web3j.protocol.core.RemoteCall;
import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.fisco.bcos.web3j.tuples.generated.Tuple1;
import org.fisco.bcos.web3j.tx.Contract;
import org.fisco.bcos.web3j.tx.TransactionManager;
import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;
import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version none.
 */
@SuppressWarnings("unchecked")
public class ClassInfoContract extends Contract {
    public static final String[] BINARY_ARRAY = {"60806040523480156200001157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040805190810160405280600981526020017f636c617373696e666f0000000000000000000000000000000000000000000000815250600190805190602001906200009f929190620003b6565b506040805190810160405280600a81526020017f636c6173735f696e666f0000000000000000000000000000000000000000000081525060029080519060200190620000ed929190620003b6565b5060066004819055506004546040519080825280602002602001820160405280156200012e57816020015b6060815260200190600190039081620001185790505b5060039080519060200190620001469291906200043d565b506040805190810160405280600781526020017f636c617373696400000000000000000000000000000000000000000000000000815250600360008154811015156200018e57fe5b906000526020600020019080519060200190620001ad929190620003b6565b506040805190810160405280600981526020017f636c6173736e616d65000000000000000000000000000000000000000000000081525060036001815481101515620001f557fe5b90600052602060002001908051906020019062000214929190620003b6565b506040805190810160405280600981526020017f7465616368657269640000000000000000000000000000000000000000000000815250600360028154811015156200025c57fe5b9060005260206000200190805190602001906200027b929190620003b6565b506040805190810160405280600681526020017f7363686f6f6c0000000000000000000000000000000000000000000000000000815250600380815481101515620002c257fe5b906000526020600020019080519060200190620002e1929190620003b6565b506040805190810160405280600b81526020017f6465736372697074696f6e000000000000000000000000000000000000000000815250600360048154811015156200032957fe5b90600052602060002001908051906020019062000348929190620003b6565b506040805190810160405280600881526020017f63617465676f7279000000000000000000000000000000000000000000000000815250600360058154811015156200039057fe5b906000526020600020019080519060200190620003af929190620003b6565b50620005d0565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003f957805160ff19168380011785556200042a565b828001600101855582156200042a579182015b82811115620004295782518255916020019190600101906200040c565b5b509050620004399190620004a4565b5090565b82805482825590600052602060002090810192821562000491579160200282015b82811115620004905782518290805190602001906200047f929190620004cc565b50916020019190600101906200045e565b5b509050620004a0919062000553565b5090565b620004c991905b80821115620004c5576000816000905550600101620004ab565b5090565b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200050f57805160ff191683800117855562000540565b8280016001018555821562000540579182015b828111156200053f57825182559160200191906001019062000522565b5b5090506200054f9190620004a4565b5090565b6200058191905b808211156200057d576000818162000573919062000584565b506001016200055a565b5090565b90565b50805460018160011615610100020316600290046000825580601f10620005ac5750620005cd565b601f016020900490600052602060002090810190620005cc9190620004a4565b5b50565b6119d180620005e06000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063223c0089146100675780635626482a146100a45780638f984066146100e1578063b2a4c8971461011e575b600080fd5b34801561007357600080fd5b5061008e60048036036100899190810190611187565b610149565b60405161009b91906115d7565b60405180910390f35b3480156100b057600080fd5b506100cb60048036036100c69190810190611295565b6104fa565b6040516100d891906115b5565b60405180910390f35b3480156100ed57600080fd5b5061010860048036036101039190810190611295565b610aa7565b60405161011591906115d7565b60405180910390f35b34801561012a57600080fd5b50610133610e5e565b60405161014091906115d7565b60405180910390f35b600080600080600080865194506004548514151561016a57600095506104f0565b600061018d88600081518110151561017e57fe5b90602001906020020151610aa7565b131561019c57600095506104f0565b61100193508373ffffffffffffffffffffffffffffffffffffffff1663f23f63c960026040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016101f7919061160d565b602060405180830381600087803b15801561021157600080fd5b505af1158015610225573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506102499190810190611243565b92508273ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156102af57600080fd5b505af11580156102c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506102e7919081019061121a565b9150600090505b6004548110156103bb578173ffffffffffffffffffffffffffffffffffffffff1663e942b51660038381548110151561032357fe5b90600052602060002001898481518110151561033b57fe5b906020019060200201516040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161037e92919061168f565b600060405180830381600087803b15801561039857600080fd5b505af11580156103ac573d6000803e3d6000fd5b505050508060010190506102ee565b8173ffffffffffffffffffffffffffffffffffffffff1663e942b51660016040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610411919061170e565b600060405180830381600087803b15801561042b57600080fd5b505af115801561043f573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166331afac366001846040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161049b92919061165f565b602060405180830381600087803b1580156104b557600080fd5b505af11580156104c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104ed919081019061126c565b95505b5050505050919050565b6060600080600080606060008061100196508673ffffffffffffffffffffffffffffffffffffffff1663f23f63c960026040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610562919061160d565b602060405180830381600087803b15801561057c57600080fd5b505af1158015610590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105b49190810190611243565b95508573ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561061a57600080fd5b505af115801561062e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061065291908101906111c8565b94508473ffffffffffffffffffffffffffffffffffffffff1663cd30a1d160016040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016106aa919061170e565b600060405180830381600087803b1580156106c457600080fd5b505af11580156106d8573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff1663cd30a1d18a6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016107319190611743565b600060405180830381600087803b15801561074b57600080fd5b505af115801561075f573d6000803e3d6000fd5b505050508573ffffffffffffffffffffffffffffffffffffffff1663e8434e396001876040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016107bb92919061162f565b602060405180830381600087803b1580156107d557600080fd5b505af11580156107e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061080d91908101906111f1565b935060045460405190808252806020026020018201604052801561084557816020015b60608152602001906001900390816108305790505b50925060008473ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156108ae57600080fd5b505af11580156108c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108e6919081019061126c565b14156108f457829750610a9b565b8373ffffffffffffffffffffffffffffffffffffffff1663846719e060006040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161094a91906115f2565b602060405180830381600087803b15801561096457600080fd5b505af1158015610978573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061099c919081019061121a565b9150600090505b600454811015610a97578173ffffffffffffffffffffffffffffffffffffffff16639c981fcb6003838154811015156109d857fe5b906000526020600020016040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610a1a919061160d565b6000604051",""};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":false,\"inputs\":[{\"name\":\"info\",\"type\":\"string[]\"}],\"name\":\"insert\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"classid\",\"type\":\"string\"}],\"name\":\"selectByClassid\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"classid\",\"type\":\"string\"}],\"name\":\"checkRecordExist\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createTable\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);

    public static final String[] SM_BINARY_ARRAY = {"",""};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String FUNC_INSERT = "insert";

    public static final String FUNC_SELECTBYCLASSID = "selectByClassid";

    public static final String FUNC_CHECKRECORDEXIST = "checkRecordExist";

    public static final String FUNC_CREATETABLE = "createTable";

    @Deprecated
    protected ClassInfoContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected ClassInfoContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected ClassInfoContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected ClassInfoContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static String getBinary() {
        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public static TransactionDecoder getTransactionDecoder() {
        return transactionDecoder;
    }

    public RemoteCall<TransactionReceipt> insert(List<String> info) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(info.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(info, Utf8String.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void insert(List<String> info, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(info.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(info, Utf8String.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String insertSeq(List<String> info) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(info.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(info, Utf8String.class))),
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public Tuple1<List<String>> getInsertInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;
        return new Tuple1<List<String>>(

                convertToNative((List<Utf8String>) results.get(0).getValue())
                );
    }

    public Tuple1<BigInteger> getInsertOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public RemoteCall<List> selectByClassid(String classid) {
        final Function function = new Function(FUNC_SELECTBYCLASSID, 
                Arrays.<Type>asList(new Utf8String(classid)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<BigInteger> checkRecordExist(String classid) {
        final Function function = new Function(FUNC_CHECKRECORDEXIST, 
                Arrays.<Type>asList(new Utf8String(classid)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> createTable() {
        final Function function = new Function(
                FUNC_CREATETABLE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void createTable(TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_CREATETABLE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String createTableSeq() {
        final Function function = new Function(
                FUNC_CREATETABLE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public Tuple1<BigInteger> getCreateTableOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CREATETABLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    @Deprecated
    public static ClassInfoContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new ClassInfoContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static ClassInfoContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new ClassInfoContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static ClassInfoContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new ClassInfoContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static ClassInfoContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new ClassInfoContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<ClassInfoContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(ClassInfoContract.class, web3j, credentials, contractGasProvider, getBinary(), "");
    }

    public static RemoteCall<ClassInfoContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(ClassInfoContract.class, web3j, transactionManager, contractGasProvider, getBinary(), "");
    }

    @Deprecated
    public static RemoteCall<ClassInfoContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(ClassInfoContract.class, web3j, credentials, gasPrice, gasLimit, getBinary(), "");
    }

    @Deprecated
    public static RemoteCall<ClassInfoContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(ClassInfoContract.class, web3j, transactionManager, gasPrice, gasLimit, getBinary(), "");
    }
}
